import numpy as np

def best_line(x, y):
    n = len(x)
    # soma das coordenadas x
    sum_x = sum(x)
    # soma das coordenadas x**2
    sum_x2 = sum(xi ** 2 for xi in x)
    # soma das coordenadas y
    sum_y = sum(y)
    #soma das coordenadas x*y
    sum_xy = sum(xi * yi for xi, yi in zip(x, y))

    # Matriz dos coeficientes
    A = [[n, sum_x], [sum_x, sum_x2]]
    # Matriz dos termos independentes
    B = [sum_y, sum_xy]

    return np.linalg.solve(A, B)

x = [0.1011, 0.1222, 0.3317, 0.4433, 0.5901, 0.6509, 0.8255, 0.9514, 0.9895, 1.1321, 1.3153, 1.3536, 1.4901, 1.6285, 1.6869, 1.9045, 1.9506, 2.1327, 2.2107, 2.3826, 2.4897, 2.6377, 2.7488, 2.8839, 3.0118, 3.0855, 3.2395, 3.3414, 3.4427, 3.5123, 3.7276, 3.7976, 3.8592, 4.0573, 4.1164, 4.2265, 4.3382, 4.5116, 4.5908, 4.7564, 4.9385, 5.0333, 5.1673, 5.2774, 5.388, 5.4357, 5.6043, 5.6837, 5.8687, 5.941, 6.0658, 6.1697, 6.2899, 6.4827, 6.5283, 6.6283, 6.8481, 6.9476, 7.0701, 7.1733, 7.2329, 7.4591, 7.4863, 7.6833, 7.7895, 7.9488, 8.0698, 8.1594, 8.2549, 8.4126, 8.4403, 8.627, 8.7822, 8.8494, 8.9631, 9.0702, 9.2505, 9.3781, 9.5133, 9.6269, 9.69, 9.8205, 9.8921]
y = [4.609, 4.3713, 4.0215, 3.871, 3.6155, 3.8252, 3.0757, 2.819, 2.8687, 2.6273, 2.1747, 2.5853, 2.0577, 1.4015, 1.7677, 1.1523, 1.8224, 0.7189, 0.6299, 0.7409, 0.5675, -0.0238, -0.2496, -0.4096, -0.449, -0.7978, -0.2837, -1.3862, -1.2734, -1.6722, -1.7109, -2.9898, -1.8602, -2.388, -1.3459, -2.5434, -2.7773, -3.4082, -3.1392, -3.4429, -3.8888, -4.8687, -4.2018, -6.1016, -4.8097, -4.954, -5.3697, -5.4055, -5.6715, -5.7003, -6.0664, -6.27, -6.3924, -6.8293, -6.9895, -6.8998, -7.1726, -7.7806, -7.5909, -8.9017, -8.9148, -8.3899, -8.6974, -9.7281, -8.9331, -9.3928, -9.6334, -9.5066, -9.8851, -9.246, -10.9652, -11.2993, -10.4939, -10.7705, -10.91, -11.3011, -11.5834, -11.7725, -12.4586, -13.3004, -12.597, -13.4796, -12.7619]

a0, a1 = best_line(x, y)

print(f'{a0 = } e {a1 = }')
